---
// index.astro
export const prerender = false;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>GitHub Hours Estimator</title>
    <link rel="stylesheet" href="styles.css" />
    <style>
      :root {
        --primary-color: #2563eb;
        --secondary-color: #1e40af;
        --background-color: #f3f4f6;
        --card-background: #ffffff;
        --text-color: #1f2937;
        --error-color: #dc2626;
      }

      body {
        font-family:
          "Inter",
          system-ui,
          -apple-system,
          sans-serif;
        background-color: var(--background-color);
        color: var(--text-color);
        line-height: 1.6;
        margin: 0;
        padding: 0;
      }

      .container {
        max-width: 800px;
        margin: 40px auto;
        padding: 20px;
      }

      .card {
        background-color: var(--card-background);
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        padding: 24px;
        margin-bottom: 20px;
      }

      h1 {
        font-size: 28px;
        text-align: center;
        margin-bottom: 24px;
        color: var(--primary-color);
      }

      .form-group {
        margin-bottom: 16px;
      }

      label {
        display: block;
        margin-bottom: 6px;
        font-weight: 500;
      }

      input[type="text"] {
        width: 100%;
        padding: 12px;
        border: 1px solid #d1d5db;
        border-radius: 4px;
        font-size: 16px;
        transition: border-color 0.2s;
      }

      input[type="text"]:focus {
        outline: none;
        border-color: var(--primary-color);
        box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.2);
      }

      button {
        background-color: var(--primary-color);
        color: white;
        border: none;
        border-radius: 4px;
        padding: 12px 20px;
        font-size: 16px;
        font-weight: 500;
        cursor: pointer;
        transition: background-color 0.2s;
        width: 100%;
      }

      button:hover {
        background-color: var(--secondary-color);
      }

      button:disabled {
        background-color: #9ca3af;
        cursor: not-allowed;
      }

      .error-message {
        color: var(--error-color);
        margin-top: 8px;
        font-size: 14px;
      }

      .loading-indicator {
        text-align: center;
        margin: 20px 0;
        display: none;
      }

      .spinner {
        border: 3px solid rgba(0, 0, 0, 0.1);
        border-radius: 50%;
        border-top: 3px solid var(--primary-color);
        width: 24px;
        height: 24px;
        animation: spin 1s linear infinite;
        margin: 0 auto;
      }

      @keyframes spin {
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
      }

      .result-container {
        display: none;
        margin-top: 24px;
      }

      .result-card {
        background-color: var(--card-background);
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        padding: 24px;
        text-align: center;
      }

      .result-value {
        font-size: 48px;
        font-weight: 700;
        color: var(--primary-color);
        margin: 16px 0;
      }

      .result-label {
        font-size: 18px;
        color: #6b7280;
      }

      .repo-info {
        margin-top: 16px;
        padding-top: 16px;
        border-top: 1px solid #e5e7eb;
        font-size: 14px;
        color: #6b7280;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h1>GitHub Hours Estimator</h1>

      <div class="card">
        <div class="form-group">
          <label for="repoUrl">GitHub Repository URL</label>
          <input
            type="text"
            id="repoUrl"
            placeholder="https://github.com/username/repository"
            aria-describedby="repoUrlError"
          />
          <div id="repoUrlError" class="error-message"></div>
        </div>

        <button id="estimateButton">Estimate Hours</button>

        <div id="loadingIndicator" class="loading-indicator">
          <div class="spinner"></div>
          <p>Analyzing repository... This may take a moment.</p>
        </div>
      </div>

      <div id="resultContainer" class="result-container">
        <div class="result-card">
          <div class="result-label">Estimated Development Time</div>
          <div id="hoursValue" class="result-value"></div>
          <div class="result-label">hours</div>
          <div id="repoInfo" class="repo-info"></div>
        </div>
      </div>
    </div>

    <script>
      // Wait for DOM to be fully loaded
      document.addEventListener("DOMContentLoaded", () => {
        const repoUrlInput = document.getElementById(
          "repoUrl"
        ) as HTMLInputElement;
        const estimateButton = document.getElementById(
          "estimateButton"
        ) as HTMLButtonElement;
        const loadingIndicator = document.getElementById(
          "loadingIndicator"
        ) as HTMLElement;
        const resultContainer = document.getElementById(
          "resultContainer"
        ) as HTMLElement;
        const hoursValue = document.getElementById("hoursValue") as HTMLElement;
        const repoInfo = document.getElementById("repoInfo") as HTMLElement;
        const repoUrlError = document.getElementById(
          "repoUrlError"
        ) as HTMLElement;

        // GitHub URL validation regex
        const githubRegex =
          /^https?:\/\/(www\.)?github\.com\/[\w-]+\/[\w.-]+(\/?|\.git)?$/;

        // Add input validation
        repoUrlInput.addEventListener("input", () => {
          const isValid = githubRegex.test(repoUrlInput.value.trim());
          if (repoUrlInput.value.trim() === "") {
            repoUrlError.textContent = "";
            estimateButton.disabled = false;
          } else if (!isValid) {
            repoUrlError.textContent =
              "Please enter a valid GitHub repository URL";
            estimateButton.disabled = true;
          } else {
            repoUrlError.textContent = "";
            estimateButton.disabled = false;
          }
        });

        // Handle button click
        estimateButton.addEventListener("click", async () => {
          const repoUrl = repoUrlInput.value.trim();

          if (!repoUrl) {
            repoUrlError.textContent = "Please enter a GitHub repository URL";
            return;
          }

          if (!githubRegex.test(repoUrl)) {
            repoUrlError.textContent =
              "Please enter a valid GitHub repository URL";
            return;
          }

          try {
            // Show loading state
            estimateButton.disabled = true;
            loadingIndicator.style.display = "block";
            resultContainer.style.display = "none";

            // Extract repo name for display
            const repoName =
              repoUrl.split("/").pop()?.replace(".git", "") || "";
            const username = repoUrl.split("/").slice(-2)[0];

            // Encode the URL properly for a GET request
            const encodedRepoUrl = encodeURIComponent(repoUrl);

            // Call the API endpoint as GET
            const response = await fetch(
              `/api/estimate-hours?repoUrl=${encodedRepoUrl}`
            );

            if (!response.ok) {
              throw new Error("Failed to analyze repository");
            }

            const data = await response.json();

            // Update and show result
            hoursValue.textContent = data.hours.toLocaleString();
            repoInfo.textContent = `Repository: ${username}/${repoName}`;
            resultContainer.style.display = "block";
          } catch (error) {
            console.error("Error:", error);
            repoUrlError.textContent =
              error instanceof Error
                ? error.message
                : "An unexpected error occurred";
          } finally {
            // Hide loading state
            loadingIndicator.style.display = "none";
            estimateButton.disabled = false;
          }
        });
      });
    </script>
  </body>
</html>
